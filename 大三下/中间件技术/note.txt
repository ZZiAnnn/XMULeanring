接口的作用：
1、解耦合：对象与对象只通过接口进行交互
2、推迟实现：
3、封装常量
4、多重继承（组合）



1、概念题：中间件是什么
2、简答题：负载均衡是什么，为什么要负载均衡
3、综合题：服务和微服务区别（用自己的话说）
4、开放题：实现秒杀（要举例子，什么问题、什么方法解决、3个层次）

不会出现一章没有题的情况

七分真三分假：
1、什么是中间件：狭义 广义
2、什么是分布式互操作
3、com里面的orb是什么，什么作用
4、什么是负载，什么是负载均衡，注意多层次（网络角度、web角度、芯片角度、cpu和gpu角度、数据库查询.....）
5、虚拟化，什么是虚拟化、为什么要虚拟化、vm和容器解释一下，还有比较
6、事务 两段锁（概念解释题）和两段式提交（问答题、综合题）
7、什么是面向组件、什么是面向服务、什么是微服务
8、英语解释：aas pas ras sas 
9、webservice
10、rpc
还有一个保密，我猜是总线


1、什么是负载均衡、什么作用、什么时候用
2、高内聚、低耦合，怎么做（比如消息中间件怎么实现解耦合）
3、计算架构（怎么演进，单机 到 网络 到 云 到 端软边云结合）
4、池化，为什么要使用对象池，怎么用对象池提高性能
5、AI原生、云原生（概念）（举例子），相对于传统技术有什么技术特征
6、画图说明两段式提交（PPT上的图，说明典型的异常和异常处理方法，主要是三种异常，如何处理）
7、接口，控制反转、依赖注入，说明作用和场景
8、vm和容器的区别和联系
9、微服务架构具有哪些特点（相比单体、服务）
10、采用DNS负载均衡的优缺点
11、解释对象的串行化、反串行化、序列化、反序列化 过程
12、高内聚低耦合、高山内地删出（？）

（一定要理解）
1、什么是web服务，有无状态，restful功能可以有状态吗（给出解释）
2、解释K8S为什么产生并成为业界主流，主流特征，和docker的关系
3、简述消息中间件的queue和topic，解释怎么实现解耦、异步和消峰
4、从商业和技术看待微服务会产生，谈谈对微服务的看法


1、以类似于秒杀、大规模在线服务（订餐 、饿了么）
	a、为背景基础上 进行该系统的架构设计（画出软件架构图，基于服务和微服务）
	b、使用微服务，哪几个功能应该做成微服务（三个，举例子，不要讲大的原则）
	c、中间件角度来看使用什么可以来承受高并发（DNS负载均衡、数据库分成查询更新分库、长请求短请求分开、弹性服务、restful、service，多写点）